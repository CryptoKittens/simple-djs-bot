{
	"Default main file": {
		"prefix": "sbase",
		"body": [
			"const Discord = require('discord.js');",
			"const client = new Discord.Client();",
			"const prefix = '!';",
			"",
			"client.on('message', (message) => { ",
			"    if (message.content === prefix + 'ping') {",
			"        message.channel.send(':ping_pong: pong!');",
			"    }",
			"});",
			"",
			"client.on('ready', () => { ",
				"    console.log(`${client.user.username} is online !`);",
				"    client.user.setActivity(prefix + 'ping', {type: 'WATCHING'});",
				"});",
			"",
			"client.login('DISCORD_TOKEN');"
		],
		"description": "Create a discord basic bot + ping command.",
		
	},
	"Simple Embed": {
		"prefix": "sembed",
		"body": [
			"const Discord = require('discord.js')",
			"",
			"const embed = new Discord.MessageEmbed()",
			"    .setTitle('Simple DJS Bot')",
			"    .setColor('RED')",
			"    .setDescription('I like embed !')",
			"    .setThumbnail('https://bit.ly/3ahVEjo')",
			"    .setAuthor('Simple DJS Bot', 'https://bit.ly/3ahVEjo', 'https://discord.js.org')",
			"",
			"    message.channel.send(embed)"
		],
		"description": "Create a basic discord bot + discord embed.",
		
	},
	"Simple command handler with aliases": {
		"prefix": "schandler+",
		"body": [
			"const Discord = require('discord.js');",
			"const client = new Discord.Client();",
			"const fs = require('fs');",
			"const prefix = '!';",
			"client.commands = new Discord.Collection();",
			"",
			"//Create a folder named 'commands' in root",
			  	"const commandFiles = fs.readdirSync('./commands').filter(file => file.endsWith('.js'));",
			  	"for (const file of commandFiles) {",
				"    const command = require('./commands/' + file);",
				"    client.commands.set(command.name, command, command.description);",
				"    console.log('[✔️] ' + command.name);",
			"}",
			"",
			"client.on('message', (message) => { ",
			"if (!message.content.startsWith(prefix) || message.author.bot) return;",
			"",
			"    const args = message.content.slice(prefix.length).trim().split(' ');",
			"    const cmd = args.shift().toLowerCase();",
			"    const command = client.commands.get(cmd) || client.commands.find(x => x.aliases && x.aliases.includes(cmd));",
			"",
			"    if (command) command.execute(message, args, client);",
			"    else return;",
			"});",
		],
		"description": "Create a command handling with aliases.",
		
	},
	"Simple command handler": {
		"prefix": "schandler",
		"body": [
			"const Discord = require('discord.js');",
			"const client = new Discord.Client();",
			"const fs = require('fs');",
			"const prefix = '!';",
			"client.commands = new Discord.Collection();",
			"",
			"//Create a folder named 'commands' in root",
			  	"const commandFiles = fs.readdirSync('./commands').filter(file => file.endsWith('.js'));",
				"for (const file of commandFiles) {",
				"    const command = require('./commands/' + file);",
				"    client.commands.set(command.name, command, command.description);",
				"    console.log('[✔️] Name: ' + command.name);",
			"}",
			"",
			"client.on('message', (message) => { ",
			"//In your command file, cone 'scm'",
			"    if (!message.content.startsWith(prefix) || message.author.bot) return;",
			"",
			"    const args = message.content.slice(prefix.length).trim().split(' ');",
			"    const cmd = args.shift().toLowerCase();",
			"",
			"    if (!client.commands.has(cmd)) return;",
			"    client.commands.get(cmd).execute(message, args, client);",
			"});",
		],
		"description": "Create a simple command handling.",
		
	},
	"Simple command model": {
		"prefix": "scm",
		"body": [
			"const Discord = require('discord.js');",
			"module.exports = {",
			"    name: 'name',",
			"    description: 'LittleDescription',",
			"    usage: 'usage',",
			"    execute(message, args, client) {",
			"        //Your code",
			"    },",
			"};",
		],
		"description": "Create a simple command model.",
		
	},
	"Simple command model with aliases": {
		"prefix": "scm+",
		"body": [
			"module.exports = {",
			"    name: 'name',",
			"    description: 'LittleDescription',",
			"    aliases: ['n'],",
			"    usage: 'usage',",
			"    execute(message, args, client) {",
			"        //Your code",
			"    },",
			"};",
		],
		"description": "Create a simple command model with aliases.",
		
	},	
	
}